// <auto-generated />
using System;
using CleverIgreja.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CleverIgreja.Migrations
{
    [DbContext(typeof(BdSystemContext))]
    [Migration("20230911191716_CriacaoDasTabelas")]
    partial class CriacaoDasTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CleverIgreja.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("Descriacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("CleverIgreja.Models.Financeiro", b =>
                {
                    b.Property<int>("FinanceiroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinanceiroId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<float>("Desconto")
                        .HasColumnType("real");

                    b.Property<DateTime>("DtCompetencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLanc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtPagto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtVenc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Historico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Juros")
                        .HasColumnType("real");

                    b.Property<int>("MoedaId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parceiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("int");

                    b.Property<int>("TipoMovimentacaoFinanceira")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("FinanceiroId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MoedaId");

                    b.ToTable("Financeiro");
                });

            modelBuilder.Entity("CleverIgreja.Models.Igreja", b =>
                {
                    b.Property<int>("IgrejaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IgrejaId"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnpjCpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RgIe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("UF")
                        .HasColumnType("int");

                    b.Property<string>("Whatsapp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IgrejaId");

                    b.ToTable("Igreja");
                });

            modelBuilder.Entity("CleverIgreja.Models.Membro", b =>
                {
                    b.Property<int>("MembroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembroId"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CnpjCpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RgIe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<int?>("UF")
                        .HasColumnType("int");

                    b.Property<string>("Whatsapp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MembroId");

                    b.ToTable("Membro");
                });

            modelBuilder.Entity("CleverIgreja.Models.Moeda", b =>
                {
                    b.Property<int>("MoedaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MoedaId"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MoedaId");

                    b.ToTable("Moeda");
                });

            modelBuilder.Entity("CleverIgreja.Models.Financeiro", b =>
                {
                    b.HasOne("CleverIgreja.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CleverIgreja.Models.Moeda", "Moeda")
                        .WithMany()
                        .HasForeignKey("MoedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Moeda");
                });
#pragma warning restore 612, 618
        }
    }
}
